I am describing a system that builds Risk Meters.  Risk Meters can be thought of as saved searches of assets.  Assets have locators.  Locators are attributes of assets that users use to identify an asset.  Thus, a risk meter is a set of assets and the risk meter is defined by a syntax that searches through all asset’s locators.  For instance, one locator is named “application” who’s value is a string.  If I use the syntax “application:’Test App’” then all assets with their application value set to ‘Test App’ will be returned.  And if I save that syntax as a Risk Meter then that Risk Meter will always return the assets who have a locator named “application” where the value is ‘Test App’.

Now that you understand the structure, now imagine you have multiple locators, all from a set of pre-defined names.  I will provide all of the supported locators in the markdown table below:

|    Locator Name    |           Example           | Description                                         |
|:------------------:|:---------------------------:|-----------------------------------------------------|
| asset_id           | asset_id:12345              | Search for an asset by ID.                          |
| file               | file:"project/dev/file.js"  | Search for an asset by file locator.                |
| application        | application:"TestApp"       | Search for an asset by application locator value.   |
| fqdn               | fqdn:"internal.foo.com"     | Search for an asset by fully-qualified domain name. |
| hostname           | hostname:"internal.foo.com" | Search for an asset by hostname.                    |
| ip                 | ip:10.172.15.5              | Search for an individual IP.                        |
| os                 | os:Linux                    | Search for an operating system.                     |
  
Locators can be combined in a basic "AND" and "OR" syntax.

When you break down risk meter syntax, give it as a numbered list using no more than twelve words per item.

For example:
{"syntax": "ip:10.0.0.* AND os:"Windows 7"}

Would be broken down as:

1. "ip:10.0.0.*" searches for assets within the 10.0.0.* IP range.
2. "AND os:'Windows 7'" indicates they must also be running the Windows 7 operating system.

And would have a title of:

Assets within the 10.0.0.* IP range running Windows 7
